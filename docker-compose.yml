version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: documentsearcher
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c idle_in_transaction_session_timeout=60000
      -c statement_timeout=120000
      -c tcp_keepalives_idle=600
      -c tcp_keepalives_interval=30
      -c tcp_keepalives_count=3
      -c log_min_duration_statement=1000
      -c log_connections=off
      -c log_disconnections=off
      -c log_lock_waits=on
      -c log_temp_files=0
      -c max_worker_processes=8
      -c max_parallel_workers_per_gather=4
      -c max_parallel_workers=8
      -c max_parallel_maintenance_workers=4
      -c synchronous_commit=off
      -c fsync=on
      -c full_page_writes=on
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 10s
      retries: 3

  app:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/documentsearcher
      DEBUG: "true"
    volumes:
      - ./uploads:/app/uploads
      - .:/app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      sh -c "
        echo 'Ожидание готовности базы данных...' &&
        until pg_isready -h db -U postgres; do
          echo 'PostgreSQL недоступен - ждем...'
          sleep 1
        done &&
        
        # Проверяем, применены ли уже миграции
        if ! alembic current | grep -q 'head'; then
          echo 'Применение миграций Alembic...' &&
          alembic upgrade head &&
          echo 'Миграции успешно применены!'
        else
          echo 'Миграции уже применены, пропускаем...'
        fi &&
        echo 'Запуск приложения...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  postgres_data:
